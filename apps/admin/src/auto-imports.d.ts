/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-auto-import
export {}
declare global {
  const App: typeof import('@capacitor/app')['App']
  const BarcodeScanner: typeof import('@capacitor-community/barcode-scanner')['BarcodeScanner']
  const Browser: typeof import('@capacitor/browser')['Browser']
  const Clipboard: typeof import('@capacitor/clipboard')['Clipboard']
  const Directory: typeof import('@capacitor/filesystem')['Directory']
  const EffectScope: typeof import('vue')['EffectScope']
  const Filesystem: typeof import('@capacitor/filesystem')['Filesystem']
  const Haptics: typeof import('@capacitor/haptics')['Haptics']
  const IonButton: typeof import('@ionic/vue')['IonButton']
  const IonFab: typeof import('@ionic/vue')['IonFab']
  const IonFabButton: typeof import('@ionic/vue')['IonFabButton']
  const IonIcon: typeof import('@ionic/vue')['IonIcon']
  const IonImg: typeof import('@ionic/vue')['IonImg']
  const IonInput: typeof import('@ionic/vue')['IonInput']
  const IonItem: typeof import('@ionic/vue')['IonItem']
  const IonLabel: typeof import('@ionic/vue')['IonLabel']
  const IonNote: typeof import('@ionic/vue')['IonNote']
  const IonSearchbar: typeof import('@ionic/vue')['IonSearchbar']
  const IonText: typeof import('@ionic/vue')['IonText']
  const Network: typeof import('@capacitor/network')['Network']
  const NotificationType: typeof import('@capacitor/haptics')['NotificationType']
  const Preferences: typeof import('@capacitor/preferences')['Preferences']
  const ScreenBrightness: typeof import('@capacitor-community/screen-brightness')['ScreenBrightness']
  const Share: typeof import('@capacitor/share')['Share']
  const SupportedFormat: typeof import('@capacitor-community/barcode-scanner')['SupportedFormat']
  const Toast: typeof import('@capacitor/toast')['Toast']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const customRef: typeof import('vue')['customRef']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const effectScope: typeof import('vue')['effectScope']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const h: typeof import('vue')['h']
  const inject: typeof import('vue')['inject']
  const isPlatform: typeof import('@ionic/vue')['isPlatform']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const markRaw: typeof import('vue')['markRaw']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeRouteLeave: typeof import('vue-router')['onBeforeRouteLeave']
  const onBeforeRouteUpdate: typeof import('vue-router')['onBeforeRouteUpdate']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onIonViewDidEnter: typeof import('@ionic/vue')['onIonViewDidEnter']
  const onIonViewWillEnter: typeof import('@ionic/vue')['onIonViewWillEnter']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const useAttrs: typeof import('vue')['useAttrs']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useI18n: typeof import('vue-i18n')['useI18n']
  const useIonRouter: typeof import('@ionic/vue')['useIonRouter']
  const useLink: typeof import('vue-router')['useLink']
  const useLogger: typeof import('@code/logger')['useLogger']
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouter: typeof import('vue-router')['useRouter']
  const useSlots: typeof import('vue')['useSlots']
  const useSupabase: typeof import('@code/supabase')['useSupabase']
  const useToast: typeof import('@code/ceebi-ui')['useToast']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, InjectionKey, PropType, Ref, VNode } from 'vue'
  // @ts-ignore
  export type { WPUser } from '@code/wp-types'
  // @ts-ignore
  export type { Msg as LoggerMsg, LogLevel as LoggerLogLevel } from '@code/logger'
}
// for vue template auto import
import { UnwrapRef } from 'vue'
declare module 'vue' {
  interface ComponentCustomProperties {
    readonly App: UnwrapRef<typeof import('@capacitor/app')['App']>
    readonly BarcodeScanner: UnwrapRef<typeof import('@capacitor-community/barcode-scanner')['BarcodeScanner']>
    readonly Browser: UnwrapRef<typeof import('@capacitor/browser')['Browser']>
    readonly Clipboard: UnwrapRef<typeof import('@capacitor/clipboard')['Clipboard']>
    readonly Directory: UnwrapRef<typeof import('@capacitor/filesystem')['Directory']>
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly Filesystem: UnwrapRef<typeof import('@capacitor/filesystem')['Filesystem']>
    readonly Haptics: UnwrapRef<typeof import('@capacitor/haptics')['Haptics']>
    readonly IonButton: UnwrapRef<typeof import('@ionic/vue')['IonButton']>
    readonly IonFab: UnwrapRef<typeof import('@ionic/vue')['IonFab']>
    readonly IonFabButton: UnwrapRef<typeof import('@ionic/vue')['IonFabButton']>
    readonly IonIcon: UnwrapRef<typeof import('@ionic/vue')['IonIcon']>
    readonly IonImg: UnwrapRef<typeof import('@ionic/vue')['IonImg']>
    readonly IonInput: UnwrapRef<typeof import('@ionic/vue')['IonInput']>
    readonly IonItem: UnwrapRef<typeof import('@ionic/vue')['IonItem']>
    readonly IonLabel: UnwrapRef<typeof import('@ionic/vue')['IonLabel']>
    readonly IonNote: UnwrapRef<typeof import('@ionic/vue')['IonNote']>
    readonly IonSearchbar: UnwrapRef<typeof import('@ionic/vue')['IonSearchbar']>
    readonly IonText: UnwrapRef<typeof import('@ionic/vue')['IonText']>
    readonly Network: UnwrapRef<typeof import('@capacitor/network')['Network']>
    readonly NotificationType: UnwrapRef<typeof import('@capacitor/haptics')['NotificationType']>
    readonly Preferences: UnwrapRef<typeof import('@capacitor/preferences')['Preferences']>
    readonly ScreenBrightness: UnwrapRef<typeof import('@capacitor-community/screen-brightness')['ScreenBrightness']>
    readonly Share: UnwrapRef<typeof import('@capacitor/share')['Share']>
    readonly SupportedFormat: UnwrapRef<typeof import('@capacitor-community/barcode-scanner')['SupportedFormat']>
    readonly Toast: UnwrapRef<typeof import('@capacitor/toast')['Toast']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly isPlatform: UnwrapRef<typeof import('@ionic/vue')['isPlatform']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeRouteLeave: UnwrapRef<typeof import('vue-router')['onBeforeRouteLeave']>
    readonly onBeforeRouteUpdate: UnwrapRef<typeof import('vue-router')['onBeforeRouteUpdate']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onIonViewDidEnter: UnwrapRef<typeof import('@ionic/vue')['onIonViewDidEnter']>
    readonly onIonViewWillEnter: UnwrapRef<typeof import('@ionic/vue')['onIonViewWillEnter']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
    readonly onRenderTriggered: UnwrapRef<typeof import('vue')['onRenderTriggered']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly resolveComponent: UnwrapRef<typeof import('vue')['resolveComponent']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly toValue: UnwrapRef<typeof import('vue')['toValue']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
    readonly useI18n: UnwrapRef<typeof import('vue-i18n')['useI18n']>
    readonly useIonRouter: UnwrapRef<typeof import('@ionic/vue')['useIonRouter']>
    readonly useLink: UnwrapRef<typeof import('vue-router')['useLink']>
    readonly useLogger: UnwrapRef<typeof import('@code/logger')['useLogger']>
    readonly useRoute: UnwrapRef<typeof import('vue-router')['useRoute']>
    readonly useRouter: UnwrapRef<typeof import('vue-router')['useRouter']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly useSupabase: UnwrapRef<typeof import('@code/supabase')['useSupabase']>
    readonly useToast: UnwrapRef<typeof import('@code/ceebi-ui')['useToast']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
  }
}
declare module '@vue/runtime-core' {
  interface ComponentCustomProperties {
    readonly App: UnwrapRef<typeof import('@capacitor/app')['App']>
    readonly BarcodeScanner: UnwrapRef<typeof import('@capacitor-community/barcode-scanner')['BarcodeScanner']>
    readonly Browser: UnwrapRef<typeof import('@capacitor/browser')['Browser']>
    readonly Clipboard: UnwrapRef<typeof import('@capacitor/clipboard')['Clipboard']>
    readonly Directory: UnwrapRef<typeof import('@capacitor/filesystem')['Directory']>
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly Filesystem: UnwrapRef<typeof import('@capacitor/filesystem')['Filesystem']>
    readonly Haptics: UnwrapRef<typeof import('@capacitor/haptics')['Haptics']>
    readonly IonButton: UnwrapRef<typeof import('@ionic/vue')['IonButton']>
    readonly IonFab: UnwrapRef<typeof import('@ionic/vue')['IonFab']>
    readonly IonFabButton: UnwrapRef<typeof import('@ionic/vue')['IonFabButton']>
    readonly IonIcon: UnwrapRef<typeof import('@ionic/vue')['IonIcon']>
    readonly IonImg: UnwrapRef<typeof import('@ionic/vue')['IonImg']>
    readonly IonInput: UnwrapRef<typeof import('@ionic/vue')['IonInput']>
    readonly IonItem: UnwrapRef<typeof import('@ionic/vue')['IonItem']>
    readonly IonLabel: UnwrapRef<typeof import('@ionic/vue')['IonLabel']>
    readonly IonNote: UnwrapRef<typeof import('@ionic/vue')['IonNote']>
    readonly IonSearchbar: UnwrapRef<typeof import('@ionic/vue')['IonSearchbar']>
    readonly IonText: UnwrapRef<typeof import('@ionic/vue')['IonText']>
    readonly Network: UnwrapRef<typeof import('@capacitor/network')['Network']>
    readonly NotificationType: UnwrapRef<typeof import('@capacitor/haptics')['NotificationType']>
    readonly Preferences: UnwrapRef<typeof import('@capacitor/preferences')['Preferences']>
    readonly ScreenBrightness: UnwrapRef<typeof import('@capacitor-community/screen-brightness')['ScreenBrightness']>
    readonly Share: UnwrapRef<typeof import('@capacitor/share')['Share']>
    readonly SupportedFormat: UnwrapRef<typeof import('@capacitor-community/barcode-scanner')['SupportedFormat']>
    readonly Toast: UnwrapRef<typeof import('@capacitor/toast')['Toast']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly isPlatform: UnwrapRef<typeof import('@ionic/vue')['isPlatform']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeRouteLeave: UnwrapRef<typeof import('vue-router')['onBeforeRouteLeave']>
    readonly onBeforeRouteUpdate: UnwrapRef<typeof import('vue-router')['onBeforeRouteUpdate']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onIonViewDidEnter: UnwrapRef<typeof import('@ionic/vue')['onIonViewDidEnter']>
    readonly onIonViewWillEnter: UnwrapRef<typeof import('@ionic/vue')['onIonViewWillEnter']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
    readonly onRenderTriggered: UnwrapRef<typeof import('vue')['onRenderTriggered']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly resolveComponent: UnwrapRef<typeof import('vue')['resolveComponent']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly toValue: UnwrapRef<typeof import('vue')['toValue']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
    readonly useI18n: UnwrapRef<typeof import('vue-i18n')['useI18n']>
    readonly useIonRouter: UnwrapRef<typeof import('@ionic/vue')['useIonRouter']>
    readonly useLink: UnwrapRef<typeof import('vue-router')['useLink']>
    readonly useLogger: UnwrapRef<typeof import('@code/logger')['useLogger']>
    readonly useRoute: UnwrapRef<typeof import('vue-router')['useRoute']>
    readonly useRouter: UnwrapRef<typeof import('vue-router')['useRouter']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly useSupabase: UnwrapRef<typeof import('@code/supabase')['useSupabase']>
    readonly useToast: UnwrapRef<typeof import('@code/ceebi-ui')['useToast']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
  }
}
